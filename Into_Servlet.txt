    Advance Java
    ============

    *Desktop
        1- Swing
        2- JavaFx
    *Web
        1- Servlet
        2- Jsp
        3- Spring (Framework)
    *Distributed
        1- Spring boot (Framework)
    
    


    Servlet: Servlet is simple java program runs on server & capable of handling request & generating dynamic response.

                        Request
    User/Client/Browser -------> Server
                        <------- (Java Program)
                        Response    DB


    There 3 ways of Servlet:
        1- Servlet interface
        2- GenericServlet
        3- HttpServlet


    Creating Servlet Using Servlet
    ==============================

        -> Life Cycle Method

            1- public void init(ServletConfig config);
            2- public void service(ServletRequest request, ServletResponse response);
            3- public void destroy():


        -> Non life cycle method

            4- public ServletConfig getServletConfig();
            5- public String getServletInfo();

        
        Deploy in server
        ----------------

        web.xml- Deployment Descriptor
        url mapping- www.fb.com/register

        $ mvn archetype:generate -DgroupId=com.example -DartifactId=my-webapp -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false

        
Servlet FirstProgram.java
==========================

    Location: /java/com/servlets
    Package: com.servlets
    Imports: jakarta.servlet.*
    Implements: Servlet interface

Methods:

    init(ServletConfig config):
        Called once when the servlet is first loaded.
        Initializes the servlet.
        System.out.println("Servlet initialized");

    service(ServletRequest req, ServletResponse res):
        Handles requests from clients.
        Sets response content type to HTML.
        Writes response with res.getWriter().println("<h1>Hello from FirstProgram Servlet! 2</h1>");
        Prints debug information.

    getServletConfig():
        Returns servlet configuration object.

    getServletInfo():
        Returns information about the servlet (e.g., version).

    destroy():
        Called when the servlet is about to be destroyed.
        System.out.println("Servlet is being destroyed");



GenericServlet
===============
    We generally user   implements  in servlet and    extends in GenericServlet
    We dont need override then only  service needed
    We then also maded SecondProgram.java & updated servelt name , pattern , then update the index.html

HttpServlet
===========
    Purpose: Provides HTTP-specific methods for handling different types of HTTP requests.
        Methods Provided:
            doGet(HttpServletRequest req, HttpServletResponse resp): Handles HTTP GET requests.
            doPost(HttpServletRequest req, HttpServletResponse resp): Handles HTTP POST requests.
            doHead(HttpServletRequest req, HttpServletResponse resp): Handles HTTP HEAD requests.
            doTrace(HttpServletRequest req, HttpServletResponse resp): Handles HTTP TRACE requests.
        Exception Handling: When extending HttpServlet, there's no need to import specific exceptions for common HTTP methods as they are handled internally.

    Recent Updates:
        Created SecondProgram.java with specific HTTP method implementations.
        Updated the servlet name and URL pattern in web.xml.
        Updated index.html to reflect changes in the servlet configuration.

        Possible Error:

             HTTP 405 Method Not Allowed: When the form is submitted using POST, the server will respond with an HTTP 405 error if there is no doPost method to handle it.

        So dopost should also be done
    

Servlet Life-Cycle:
===================
    Entire life cycle managed by Servlet container
    Goes through 4 step

    1- Loading Servlet
    2- Intializing Servlet
    3- Request Handling
    4- Destroying Servlet